<?xml version="1.0" encoding="ISO-8859-1" ?>
<device>
  <name>final_top</name>
  <version>1.0</version>
  <description>CMSIS description for final_top.  Created by Actel SmartDesign on Thu Dec 13 03:44:39 2012</description>
  <addressUnitBits>8</addressUnitBits>
  <width>32</width>
  <peripherals>
    <peripheral>
      <name>corepwm_0</name>
      <baseAddress>0x40050000</baseAddress>
      <addressBlock>
        <offset>0x40050000</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>PRESCALE</name>
          <description>The system clock cycle is multiplied by the PRESCALE value, resulting in the minimum PERIOD count timebase  </description>
          <addressOffset>0x00</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x08</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PERIOD</name>
          <description>The PRESCALE value is multiplied by the PERIOD value, yielding the PWM waveform cycle.  Example: system clock = 40 ns, PRESCALE register = 255, PERIOD register = 127.  The PWM waveforms will repeat every 40 ns / 256 x 128 = 1.31 ms. The resolution of the PWM waveforms will be 1.31ms / 128 = 10.23 micros.  This is a R/W register with a reset value of 0h08</description>
          <addressOffset>0x04</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x08</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>ENABLE_0_7</name>
          <description>'1' enables each PWM output. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x08</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>ENABLE_8_15</name>
          <description>'1' masks each respective bit in the INTERRUPT register. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x0C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM1_POSEDGE</name>
          <description>Sets positive edge of each PWM1 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x10</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM1_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of each PWM1 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x14</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM2_POSEDGE</name>
          <description>Sets positive edge of the PWM2 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x18</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM2_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM2 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x1C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM3_POSEDGE</name>
          <description>Sets positive edge of the PWM3 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x20</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM3_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM3 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x24</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM4_POSEDGE</name>
          <description>Sets positive edge of the PWM4 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x28</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM4_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM4 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x2C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM5_POSEDGE</name>
          <description>Sets positive edge of the PWM5 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x30</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM5_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM5 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x34</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM6_POSEDGE</name>
          <description>Sets positive edge of the PWM6 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x38</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM6_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM6 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x3C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM7_POSEDGE</name>
          <description>Sets positive edge of the PWM7 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x40</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM7_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM7 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x44</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM8_POSEDGE</name>
          <description>Sets positive edge of the PWM8 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x48</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM8_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM8 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x4C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM9_POSEDGE</name>
          <description>Sets positive edge of the PWM9 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x50</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM9_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM9 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x54</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM10_POSEDGE</name>
          <description>Sets positive edge of the PWM10 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x58</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM10_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM10 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x5C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM11_POSEDGE</name>
          <description>Sets positive edge of the PWM11 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x60</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM11_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM11 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x64</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM12_POSEDGE</name>
          <description>Sets positive edge of the PWM12 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x68</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM12_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM12 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x6C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM13_POSEDGE</name>
          <description>Sets positive edge of the PWM13 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x70</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM13_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM13 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x74</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM14_POSEDGE</name>
          <description>Sets positive edge of the PWM14 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x78</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM14_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM14 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x7C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM15_POSEDGE</name>
          <description>Sets positive edge of the PWM15 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x80</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM15_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM15 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x84</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM16_POSEDGE</name>
          <description>Sets positive edge of the PWM16 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x88</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM16_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM16 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x8C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM_STRETCH</name>
          <description>When 0, the state of PWMx is determined by PWMx_POS/NEGEDGE register settings. When 1, PWMx is set to PWM_STRETCH_VALUEx. This is a R/W register with a reset value of 0h0000</description>
          <addressOffset>0x90</addressOffset>
          <size>16</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPRESCALE</name>
          <description>Clock prescale setting. Determines effective clock rate for the counter based on PCLK: 0000 = divide by 1 (default) 0001 = divide by 2 0010 = divide by 4 0011 = divide by 8 0100 = divide by 16 0101 = divide by 32 0110 = divide by 64 0111 = divide by 128 1000 = divide by 256 1001 = divide by 512 1010 = divide by 1,024 1011 = divide by 2,048 Others = divide by 2,048. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x94</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHSTATUS</name>
          <description>This is a TACH status register which contains one bit per TACH input, indicating whether the respective TACHPULSEDUR register has been updated at least once since the bit was cleared. The bits in this register gets cleared by writing a "1" and "0" doesn't have any effect. This is a R/W1C register with a reset value of 0h0000</description>
          <addressOffset>0x98</addressOffset>
          <size>16</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHIRQMASK</name>
          <description>This is a TACH interrupt mask register with one bit per tachometer signal, indicating whether CorePWM needs to assert an interrupt if the respective bit in TACHSTATUS register is asserted. This is a R/W register with a reset value of 0h0000</description>
          <addressOffset>0x9C</addressOffset>
          <size>16</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHMODE</name>
          <description>Sets the measurement mode used for each TACH input.  When 0: TACH input is continuously measured and stored in the respective TACHPULSEDUR register When 1:  A one-time measurement is performed only if the respective bit in TACHSTATUS register is cleared. This is a R/W register with a reset value of 0h0000</description>
          <addressOffset>0xA0</addressOffset>
          <size>16</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_0</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[0]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xA4</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_1</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[1]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xA8</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_2</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[2]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xAC</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_3</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[3]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xB0</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_4</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[4]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xB4</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_5</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[5]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xB8</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_6</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[6]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xBC</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_7</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[7]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xC0</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_8</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[8]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xC4</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_9</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[9]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xC8</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_10</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[10]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xCC</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_11</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[11]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xD0</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_12</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[12]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xD4</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_13</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[13]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xD8</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_14</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[14]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xDC</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_15</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[15]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xE0</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>corepwm_1</name>
      <baseAddress>0x40050100</baseAddress>
      <addressBlock>
        <offset>0x40050100</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>PRESCALE</name>
          <description>The system clock cycle is multiplied by the PRESCALE value, resulting in the minimum PERIOD count timebase  </description>
          <addressOffset>0x00</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x08</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PERIOD</name>
          <description>The PRESCALE value is multiplied by the PERIOD value, yielding the PWM waveform cycle.  Example: system clock = 40 ns, PRESCALE register = 255, PERIOD register = 127.  The PWM waveforms will repeat every 40 ns / 256 x 128 = 1.31 ms. The resolution of the PWM waveforms will be 1.31ms / 128 = 10.23 micros.  This is a R/W register with a reset value of 0h08</description>
          <addressOffset>0x04</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x08</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>ENABLE_0_7</name>
          <description>'1' enables each PWM output. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x08</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>ENABLE_8_15</name>
          <description>'1' masks each respective bit in the INTERRUPT register. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x0C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM1_POSEDGE</name>
          <description>Sets positive edge of each PWM1 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x10</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM1_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of each PWM1 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x14</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM2_POSEDGE</name>
          <description>Sets positive edge of the PWM2 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x18</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM2_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM2 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x1C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM3_POSEDGE</name>
          <description>Sets positive edge of the PWM3 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x20</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM3_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM3 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x24</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM4_POSEDGE</name>
          <description>Sets positive edge of the PWM4 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x28</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM4_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM4 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x2C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM5_POSEDGE</name>
          <description>Sets positive edge of the PWM5 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x30</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM5_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM5 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x34</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM6_POSEDGE</name>
          <description>Sets positive edge of the PWM6 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x38</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM6_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM6 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x3C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM7_POSEDGE</name>
          <description>Sets positive edge of the PWM7 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x40</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM7_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM7 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x44</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM8_POSEDGE</name>
          <description>Sets positive edge of the PWM8 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x48</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM8_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM8 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x4C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM9_POSEDGE</name>
          <description>Sets positive edge of the PWM9 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x50</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM9_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM9 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x54</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM10_POSEDGE</name>
          <description>Sets positive edge of the PWM10 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x58</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM10_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM10 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x5C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM11_POSEDGE</name>
          <description>Sets positive edge of the PWM11 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x60</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM11_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM11 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x64</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM12_POSEDGE</name>
          <description>Sets positive edge of the PWM12 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x68</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM12_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM12 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x6C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM13_POSEDGE</name>
          <description>Sets positive edge of the PWM13 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x70</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM13_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM13 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x74</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM14_POSEDGE</name>
          <description>Sets positive edge of the PWM14 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x78</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM14_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM14 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x7C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM15_POSEDGE</name>
          <description>Sets positive edge of the PWM15 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x80</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM15_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM15 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x84</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM16_POSEDGE</name>
          <description>Sets positive edge of the PWM16 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x88</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM16_NEGEDGE_DACLEV</name>
          <description>Sets negative edge or DACLevelOut of the PWM16 output with respect to the PERIOD resolution. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x8C</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>PWM_STRETCH</name>
          <description>When 0, the state of PWMx is determined by PWMx_POS/NEGEDGE register settings. When 1, PWMx is set to PWM_STRETCH_VALUEx. This is a R/W register with a reset value of 0h0000</description>
          <addressOffset>0x90</addressOffset>
          <size>16</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPRESCALE</name>
          <description>Clock prescale setting. Determines effective clock rate for the counter based on PCLK: 0000 = divide by 1 (default) 0001 = divide by 2 0010 = divide by 4 0011 = divide by 8 0100 = divide by 16 0101 = divide by 32 0110 = divide by 64 0111 = divide by 128 1000 = divide by 256 1001 = divide by 512 1010 = divide by 1,024 1011 = divide by 2,048 Others = divide by 2,048. This is a R/W register with a reset value of 0h00</description>
          <addressOffset>0x94</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <resetValue>0x00</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHSTATUS</name>
          <description>This is a TACH status register which contains one bit per TACH input, indicating whether the respective TACHPULSEDUR register has been updated at least once since the bit was cleared. The bits in this register gets cleared by writing a "1" and "0" doesn't have any effect. This is a R/W1C register with a reset value of 0h0000</description>
          <addressOffset>0x98</addressOffset>
          <size>16</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHIRQMASK</name>
          <description>This is a TACH interrupt mask register with one bit per tachometer signal, indicating whether CorePWM needs to assert an interrupt if the respective bit in TACHSTATUS register is asserted. This is a R/W register with a reset value of 0h0000</description>
          <addressOffset>0x9C</addressOffset>
          <size>16</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHMODE</name>
          <description>Sets the measurement mode used for each TACH input.  When 0: TACH input is continuously measured and stored in the respective TACHPULSEDUR register When 1:  A one-time measurement is performed only if the respective bit in TACHSTATUS register is cleared. This is a R/W register with a reset value of 0h0000</description>
          <addressOffset>0xA0</addressOffset>
          <size>16</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_0</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[0]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xA4</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_1</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[1]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xA8</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_2</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[2]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xAC</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_3</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[3]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xB0</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_4</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[4]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xB4</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_5</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[5]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xB8</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_6</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[6]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xBC</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_7</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[7]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xC0</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_8</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[8]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xC4</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_9</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[9]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xC8</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_10</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[10]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xCC</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_11</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[11]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xD0</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_12</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[12]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xD4</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_13</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[13]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xD8</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_14</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[14]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xDC</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
        <register>
          <name>TACHPULSEDUR_15</name>
          <description>This register stores the number of timer ticks between two successive positive (or negative) edges from the TACHIN[15]. The edge to be used is configurable.  If the number of timer ticks exceeds the maximum register value, the value of 0 shall be stored instead. This is a Read only register with a reset value of 0h0000</description>
          <addressOffset>0xE0</addressOffset>
          <size>16</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <fields>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CoreUARTapb_0</name>
      <baseAddress>0x40050200</baseAddress>
    </peripheral>
  </peripherals>
</device>
